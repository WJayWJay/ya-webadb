{"version":3,"file":"static/chunks/pages/logcat-1f4dba8ba160595c.js","mappings":"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","sources":["webpack://_N_E/?d8c3","webpack://_N_E/./src/components/command-bar-spacer-item.tsx","webpack://_N_E/./src/pages/logcat.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/logcat\",\n      function () {\n        return require(\"private-next-pages/logcat.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/logcat\"])\n      });\n    }\n  ","import { useEffect, useState } from \"react\";\n\nexport function CommandBarSpacerItem() {\n    const [container, setContainer] = useState<HTMLDivElement | null>(null);\n\n    useEffect(() => {\n        if (!container) {\n            return;\n        }\n\n        const parent = container.parentElement!;\n        const originalFlexGrow = parent.style.flexGrow;\n        parent.style.flexGrow = \"1\";\n        return () => {\n            parent.style.flexGrow = originalFlexGrow;\n        };\n    }, [container]);\n\n    return <div ref={setContainer} />;\n}\n","import {\n    ContextualMenuItemType,\n    ICommandBarItemProps,\n    Stack,\n    StackItem,\n    isMac,\n} from \"@fluentui/react\";\nimport { makeStyles, mergeClasses, shorthands } from \"@griffel/react\";\nimport {\n    AndroidLogEntry,\n    AndroidLogPriority,\n    Logcat,\n    LogcatFormat,\n} from \"@yume-chan/android-bin\";\nimport {\n    AbortController,\n    ReadableStream,\n    WritableStream,\n} from \"@yume-chan/stream-extra\";\nimport { encodeUtf8 } from \"@yume-chan/struct\";\nimport {\n    action,\n    autorun,\n    makeAutoObservable,\n    observable,\n    runInAction,\n} from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport Head from \"next/head\";\nimport { KeyboardEvent, PointerEvent, useCallback } from \"react\";\n\nimport {\n    CommandBar,\n    Grid,\n    GridColumn,\n    GridHeaderProps,\n    GridRowProps,\n    ObservableListSelection,\n    isModKey,\n} from \"../components\";\nimport { CommandBarSpacerItem } from \"../components/command-bar-spacer-item\";\nimport { GLOBAL_STATE } from \"../state\";\nimport { Icons, RouteStackProps, saveFile, useStableCallback } from \"../utils\";\n\nconst LINE_HEIGHT = 32;\n\nconst useClasses = makeStyles({\n    grid: {\n        height: \"100%\",\n        marginLeft: \"-16px\",\n        marginRight: \"-16px\",\n    },\n    header: {\n        textAlign: \"center\",\n        lineHeight: `${LINE_HEIGHT}px`,\n    },\n    row: {\n        \"&:hover\": {\n            backgroundColor: \"#f3f2f1\",\n        },\n    },\n    selected: {\n        backgroundColor: \"#edebe9\",\n    },\n    code: {\n        fontFamily: \"monospace\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        lineHeight: LINE_HEIGHT + \"px\",\n        cursor: \"default\",\n        ...shorthands.overflow(\"hidden\"),\n    },\n    // Android Studio Classic Light theme\n    rowVerbose: {\n        color: \"#000000\",\n    },\n    rowDebug: {\n        color: \"#000000\",\n    },\n    rowInfo: {\n        color: \"#000000\",\n    },\n    rowWarn: {\n        color: \"#645607\",\n    },\n    rowError: {\n        color: \"#CD0000\",\n    },\n    rowFatal: {\n        color: \"#CD0000\",\n    },\n});\n\nexport interface Column extends GridColumn {\n    title: string;\n}\n\nexport interface LogRow extends AndroidLogEntry {\n    timeString?: string;\n}\n\nconst state = makeAutoObservable(\n    {\n        logcat: undefined as Logcat | undefined,\n        running: false,\n        buffer: [] as LogRow[],\n        flushRequested: false,\n        list: [] as LogRow[],\n        selection: new ObservableListSelection(),\n        count: 0,\n        stream: undefined as ReadableStream<AndroidLogEntry> | undefined,\n        stopSignal: undefined as AbortController | undefined,\n        animationFrameId: undefined as number | undefined,\n\n        format: LogcatFormat.ThreadTime,\n        formatModifierUid: false,\n        formatModifierTimezone: false,\n        formatTime: \"default\" as \"year\" | \"default\" | \"epoch\" | \"monotonic\",\n        formatNanosecond: \"millisecond\" as\n            | \"millisecond\"\n            | \"microsecond\"\n            | \"nanosecond\",\n\n        formatEntry(entry: LogRow) {\n            return entry.toString(this.format, {\n                uid: this.formatModifierUid,\n                year: this.formatTime === \"year\",\n                epoch: this.formatTime === \"epoch\",\n                monotonic: this.formatTime === \"monotonic\",\n                microseconds: this.formatNanosecond === \"microsecond\",\n                nanoseconds: this.formatNanosecond === \"nanosecond\",\n                timezone: this.formatModifierTimezone,\n            });\n        },\n\n        start() {\n            if (this.running) {\n                return;\n            }\n\n            // Logcat has its internal buffer,\n            // it will output all logs in the buffer when started.\n            // so clear the list before starting.\n            this.list = [];\n\n            this.running = true;\n            this.stream = this.logcat!.binary();\n            this.stopSignal = new AbortController();\n            this.stream\n                .pipeTo(\n                    new WritableStream({\n                        write: (chunk) => {\n                            this.buffer.push(chunk);\n                            if (!this.flushRequested) {\n                                this.flushRequested = true;\n                                requestAnimationFrame(this.flush);\n                            }\n                        },\n                    }),\n                    { signal: this.stopSignal.signal }\n                )\n                .catch((e) => {\n                    if (this.stopSignal?.signal.aborted) {\n                        return;\n                    }\n\n                    throw e;\n                });\n        },\n        flush() {\n            this.list.push(...this.buffer);\n            this.buffer = [];\n            this.flushRequested = false;\n        },\n        stop() {\n            this.running = false;\n            this.stopSignal!.abort();\n        },\n        clear() {\n            this.list = [];\n            this.selection.clear();\n        },\n        get empty() {\n            return this.list.length === 0;\n        },\n        get commandBar(): ICommandBarItemProps[] {\n            return [\n                this.running\n                    ? {\n                          key: \"stop\",\n                          text: \"Stop\",\n                          iconProps: { iconName: Icons.Stop },\n                          onClick: () => this.stop(),\n                      }\n                    : {\n                          key: \"start\",\n                          text: \"Start\",\n                          disabled: this.logcat === undefined,\n                          iconProps: { iconName: Icons.Play },\n                          onClick: () => this.start(),\n                      },\n                {\n                    key: \"clear\",\n                    text: \"Clear\",\n                    disabled: this.empty,\n                    iconProps: { iconName: Icons.Delete },\n                    onClick: () => this.clear(),\n                },\n                {\n                    key: \"select-all\",\n                    disabled: this.empty,\n                    iconProps: { iconName: Icons.Wand },\n                    text: \"Select All\",\n                    onClick: action(() => {\n                        this.selection.clear();\n                        this.selection.select(\n                            this.list.length - 1,\n                            false,\n                            true\n                        );\n                    }),\n                },\n                {\n                    key: \"copy\",\n                    text: \"Copy Selected\",\n                    disabled: this.selection.size === 0,\n                    iconProps: { iconName: Icons.Copy },\n                    onClick: () => {\n                        let text = \"\";\n                        for (const index of this.selection) {\n                            text += this.formatEntry(this.list[index]) + \"\\n\";\n                        }\n                        // Chrome on Windows can't copy null characters\n                        text = text.replace(/\\u0000/g, \"\");\n                        navigator.clipboard.writeText(text);\n                    },\n                },\n                {\n                    key: \"save\",\n                    text: \"Save Selected\",\n                    disabled: this.selection.size === 0,\n                    iconProps: { iconName: Icons.Save },\n                    onClick: () => {\n                        const stream = saveFile(`logcat.txt`);\n                        const writer = stream.getWriter();\n                        for (const index of this.selection) {\n                            writer.write(\n                                encodeUtf8(\n                                    this.formatEntry(this.list[index]) + \"\\n\"\n                                )\n                            );\n                        }\n                        writer.close();\n                    },\n                },\n\n                {\n                    // HACK: make CommandBar overflow on far items\n                    // https://github.com/microsoft/fluentui/issues/11842\n                    key: \"spacer\",\n                    onRender: () => <CommandBarSpacerItem />,\n                },\n                {\n                    // HACK: add a separator in CommandBar overflow menu\n                    // https://github.com/microsoft/fluentui/issues/10035\n                    key: \"separator\",\n                    disabled: true,\n                    itemType: ContextualMenuItemType.Divider,\n                },\n\n                {\n                    key: \"format\",\n                    iconProps: { iconName: Icons.TextGrammarSettings },\n                    text: \"Format\",\n                    subMenuProps: {\n                        items: [\n                            {\n                                key: \"format\",\n                                text: \"Format\",\n                                itemType: ContextualMenuItemType.Header,\n                            },\n                            {\n                                key: \"brief\",\n                                text: \"Brief\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"format\",\n                                },\n                                checked: this.format === LogcatFormat.Brief,\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.format = LogcatFormat.Brief;\n                                }),\n                            },\n                            {\n                                key: \"process\",\n                                text: \"Process\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"format\",\n                                },\n                                checked: this.format === LogcatFormat.Process,\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.format = LogcatFormat.Process;\n                                }),\n                            },\n                            {\n                                key: \"tag\",\n                                text: \"Tag\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"format\",\n                                },\n                                checked: this.format === LogcatFormat.Tag,\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.format = LogcatFormat.Tag;\n                                }),\n                            },\n                            {\n                                key: \"thread\",\n                                text: \"Thread\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"format\",\n                                },\n                                checked: this.format === LogcatFormat.Thread,\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.format = LogcatFormat.Thread;\n                                }),\n                            },\n                            {\n                                key: \"raw\",\n                                text: \"Raw\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"format\",\n                                },\n                                checked: this.format === LogcatFormat.Raw,\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.format = LogcatFormat.Raw;\n                                }),\n                            },\n                            {\n                                key: \"time\",\n                                text: \"Time\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"format\",\n                                },\n                                checked: this.format === LogcatFormat.Time,\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.format = LogcatFormat.Time;\n                                }),\n                            },\n                            {\n                                key: \"thread-time\",\n                                text: \"ThreadTime\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"format\",\n                                },\n                                checked:\n                                    this.format === LogcatFormat.ThreadTime,\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.format = LogcatFormat.ThreadTime;\n                                }),\n                            },\n                            {\n                                key: \"long\",\n                                text: \"Long\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"format\",\n                                },\n                                checked: this.format === LogcatFormat.Long,\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.format = LogcatFormat.Long;\n                                }),\n                            },\n\n                            {\n                                key: \"modifiers\",\n                                text: \"Modifiers\",\n                                itemType: ContextualMenuItemType.Header,\n                            },\n                            {\n                                key: \"uid\",\n                                text: \"UID\",\n                                canCheck: true,\n                                checked: this.formatModifierUid,\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.formatModifierUid =\n                                        !this.formatModifierUid;\n                                }),\n                            },\n                            {\n                                key: \"timezone\",\n                                text: \"Timezone\",\n                                canCheck: true,\n                                checked: this.formatModifierTimezone,\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.formatModifierTimezone =\n                                        !this.formatModifierTimezone;\n                                }),\n                            },\n\n                            {\n                                key: \"time-header\",\n                                text: \"Time Format\",\n                                itemType: ContextualMenuItemType.Header,\n                            },\n                            {\n                                key: \"default\",\n                                text: \"Default\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"time\",\n                                },\n                                checked: this.formatTime === \"default\",\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.formatTime = \"default\";\n                                }),\n                            },\n                            {\n                                key: \"year\",\n                                text: \"Year\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"time\",\n                                },\n                                checked: this.formatTime === \"year\",\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.formatTime = \"year\";\n                                }),\n                            },\n                            {\n                                key: \"epoch\",\n                                text: \"Epoch\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"time\",\n                                },\n                                checked: this.formatTime === \"epoch\",\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.formatTime = \"epoch\";\n                                }),\n                            },\n                            {\n                                key: \"monotonic\",\n                                text: \"Monotonic\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"time\",\n                                },\n                                checked: this.formatTime === \"monotonic\",\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.formatTime = \"monotonic\";\n                                }),\n                            },\n\n                            {\n                                key: \"nanosecondFormat\",\n                                text: \"Nanosecond Format\",\n                                itemType: ContextualMenuItemType.Header,\n                            },\n                            {\n                                key: \"millisecond\",\n                                text: \"Millisecond\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"nanosecond\",\n                                },\n                                checked:\n                                    this.formatNanosecond === \"millisecond\",\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.formatNanosecond = \"millisecond\";\n                                }),\n                            },\n                            {\n                                key: \"microsecond\",\n                                text: \"Microsecond\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"nanosecond\",\n                                },\n                                checked:\n                                    this.formatNanosecond === \"microsecond\",\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.formatNanosecond = \"microsecond\";\n                                }),\n                            },\n                            {\n                                key: \"nanosecond\",\n                                text: \"Nanosecond\",\n                                canCheck: true,\n                                itemProps: {\n                                    radioGroup: \"nanosecond\",\n                                },\n                                checked: this.formatNanosecond === \"nanosecond\",\n                                onClick: action((e) => {\n                                    e?.preventDefault();\n                                    e?.stopPropagation();\n                                    this.formatNanosecond = \"nanosecond\";\n                                }),\n                            },\n                        ],\n                    },\n                },\n            ];\n        },\n        get columns(): Column[] {\n            return [\n                {\n                    width: 200,\n                    title: \"Time\",\n                    CellComponent: ({\n                        rowIndex,\n                        columnIndex,\n                        className,\n                        ...rest\n                    }) => {\n                        const item = this.list[rowIndex];\n                        if (!item.timeString) {\n                            item.timeString = new Date(\n                                item.seconds * 1000\n                            ).toISOString();\n                        }\n\n                        const classes = useClasses();\n\n                        return (\n                            <div\n                                className={mergeClasses(\n                                    classes.code,\n                                    className\n                                )}\n                                {...rest}\n                            >\n                                {item.timeString}\n                            </div>\n                        );\n                    },\n                },\n                {\n                    width: 60,\n                    title: \"PID\",\n                    CellComponent: ({\n                        rowIndex,\n                        columnIndex,\n                        className,\n                        ...rest\n                    }) => {\n                        const item = this.list[rowIndex];\n\n                        const classes = useClasses();\n\n                        return (\n                            <div\n                                className={mergeClasses(\n                                    classes.code,\n                                    className\n                                )}\n                                {...rest}\n                            >\n                                {item.pid}\n                            </div>\n                        );\n                    },\n                },\n                {\n                    width: 60,\n                    title: \"TID\",\n                    CellComponent: ({\n                        rowIndex,\n                        columnIndex,\n                        className,\n                        ...rest\n                    }) => {\n                        const item = this.list[rowIndex];\n\n                        const classes = useClasses();\n\n                        return (\n                            <div\n                                className={mergeClasses(\n                                    classes.code,\n                                    className\n                                )}\n                                {...rest}\n                            >\n                                {item.tid}\n                            </div>\n                        );\n                    },\n                },\n                {\n                    width: 80,\n                    title: \"Priority\",\n                    CellComponent: ({\n                        rowIndex,\n                        columnIndex,\n                        className,\n                        ...rest\n                    }) => {\n                        const item = this.list[rowIndex];\n\n                        const classes = useClasses();\n\n                        return (\n                            <div\n                                className={mergeClasses(\n                                    classes.code,\n                                    className\n                                )}\n                                {...rest}\n                            >\n                                {AndroidLogPriority[item.priority]}\n                            </div>\n                        );\n                    },\n                },\n                {\n                    width: 300,\n                    title: \"Tag\",\n                    CellComponent: ({\n                        rowIndex,\n                        columnIndex,\n                        className,\n                        ...rest\n                    }) => {\n                        const item = this.list[rowIndex];\n\n                        const classes = useClasses();\n\n                        return (\n                            <div\n                                className={mergeClasses(\n                                    classes.code,\n                                    className\n                                )}\n                                {...rest}\n                            >\n                                {item.tag}\n                            </div>\n                        );\n                    },\n                },\n                {\n                    width: 300,\n                    flexGrow: 1,\n                    title: \"Message\",\n                    CellComponent: ({\n                        rowIndex,\n                        columnIndex,\n                        className,\n                        ...rest\n                    }) => {\n                        const item = this.list[rowIndex];\n                        const classes = useClasses();\n\n                        return (\n                            <div\n                                className={mergeClasses(\n                                    classes.code,\n                                    className\n                                )}\n                                {...rest}\n                            >\n                                {item.message}\n                            </div>\n                        );\n                    },\n                },\n            ];\n        },\n    },\n    {\n        buffer: false,\n        list: observable.shallow,\n        flush: action.bound,\n    }\n);\n\nautorun(() => {\n    if (GLOBAL_STATE.adb) {\n        runInAction(() => {\n            state.logcat = new Logcat(GLOBAL_STATE.adb!);\n        });\n    } else {\n        runInAction(() => {\n            state.logcat = undefined;\n            if (state.running) {\n                state.stop();\n            }\n        });\n    }\n});\n\nconst Header = observer(function Header({\n    className,\n    columnIndex,\n    ...rest\n}: GridHeaderProps) {\n    const classes = useClasses();\n\n    return (\n        <div className={mergeClasses(className, classes.header)} {...rest}>\n            {state.columns[columnIndex].title}\n        </div>\n    );\n});\n\nconst PRIORITY_COLORS: Record<\n    AndroidLogPriority,\n    keyof ReturnType<typeof useClasses>\n> = {\n    [AndroidLogPriority.Default]: \"rowVerbose\",\n    [AndroidLogPriority.Unknown]: \"rowVerbose\",\n    [AndroidLogPriority.Silent]: \"rowVerbose\",\n    [AndroidLogPriority.Verbose]: \"rowVerbose\",\n    [AndroidLogPriority.Debug]: \"rowDebug\",\n    [AndroidLogPriority.Info]: \"rowInfo\",\n    [AndroidLogPriority.Warn]: \"rowWarn\",\n    [AndroidLogPriority.Error]: \"rowError\",\n    [AndroidLogPriority.Fatal]: \"rowFatal\",\n};\n\nconst Row = observer(function Row({\n    className,\n    rowIndex,\n    ...rest\n}: GridRowProps) {\n    const classes = useClasses();\n\n    const handlePointerDown = useStableCallback(\n        action((e: PointerEvent<HTMLDivElement>) => {\n            if (e.shiftKey) {\n                e.preventDefault();\n            }\n            state.selection.select(rowIndex, isModKey(e), e.shiftKey);\n        })\n    );\n\n    return (\n        <div\n            className={mergeClasses(\n                className,\n                classes.row,\n                state.selection.has(rowIndex) && classes.selected,\n                classes[PRIORITY_COLORS[state.list[rowIndex]!.priority]]\n            )}\n            onPointerDown={handlePointerDown}\n            {...rest}\n        />\n    );\n});\n\nconst LogcatPage: NextPage = () => {\n    const classes = useClasses();\n\n    const handleKeyDown = useCallback((e: KeyboardEvent<HTMLDivElement>) => {\n        if ((isMac() ? e.metaKey : e.ctrlKey) && e.code === \"KeyA\") {\n            e.preventDefault();\n            e.stopPropagation();\n            state.selection.clear();\n            state.selection.select(state.list.length - 1, false, true);\n            return;\n        }\n\n        if (e.code === \"Escape\") {\n            e.preventDefault();\n            e.stopPropagation();\n            state.selection.clear();\n            return;\n        }\n    }, []);\n\n    return (\n        <Stack {...RouteStackProps}>\n            <Head>\n                <title>Logcat - Tango</title>\n            </Head>\n\n            <CommandBar items={state.commandBar} />\n\n            <StackItem grow>\n                <Grid\n                    className={classes.grid}\n                    rowCount={state.list.length}\n                    rowHeight={LINE_HEIGHT}\n                    columns={state.columns}\n                    HeaderComponent={Header}\n                    RowComponent={Row}\n                    onKeyDown={handleKeyDown}\n                />\n            </StackItem>\n        </Stack>\n    );\n};\n\nexport default observer(LogcatPage);\n"],"names":["window","__NEXT_P","push","__webpack_require__","CommandBarSpacerItem","container","setContainer","useState","useEffect","parent","parentElement","originalFlexGrow","style","flexGrow","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","ref","useClasses","makeStyles","grid","height","marginLeft","marginRight","header","textAlign","lineHeight","concat","row","backgroundColor","selected","code","fontFamily","textOverflow","whiteSpace","LINE_HEIGHT","cursor","shorthands","rowVerbose","color","rowDebug","rowInfo","rowWarn","rowError","rowFatal","state","makeAutoObservable","logcat","undefined","running","buffer","flushRequested","list","selection","ObservableListSelection","count","stream","stopSignal","animationFrameId","format","LogcatFormat","formatModifierUid","formatModifierTimezone","formatTime","formatNanosecond","formatEntry","entry","toString","uid","year","epoch","monotonic","microseconds","nanoseconds","timezone","start","binary","AbortController","pipeTo","WritableStream","write","chunk","requestAnimationFrame","flush","signal","catch","_this_stopSignal","aborted","e","stop","abort","clear","empty","length","commandBar","key","text","iconProps","iconName","Icons","onClick","disabled","action","select","size","index","replace","navigator","clipboard","writeText","saveFile","writer","getWriter","encodeUtf8","close","onRender","itemType","ContextualMenuItemType","subMenuProps","items","canCheck","itemProps","radioGroup","checked","preventDefault","stopPropagation","columns","width","title","CellComponent","rowIndex","columnIndex","className","rest","param","item","timeString","Date","seconds","toISOString","classes","mergeClasses","pid","tid","AndroidLogPriority","priority","tag","message","observable","autorun","GLOBAL_STATE","runInAction","Logcat","Header","observer","PRIORITY_COLORS","Row","handlePointerDown","useStableCallback","shiftKey","isModKey","has","onPointerDown","LogcatPage","handleKeyDown","useCallback","isMac","metaKey","ctrlKey","jsxs","Stack","RouteStackProps","Head","CommandBar","StackItem","grow","Grid","rowCount","rowHeight","HeaderComponent","RowComponent","onKeyDown","__webpack_exports__"],"sourceRoot":""}