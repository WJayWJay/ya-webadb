{"version":3,"file":"static/chunks/pages/reverse-0e9f503fd850fa8c.js","mappings":"mFACA,CAAAA,OAAAC,QAAA,CAAAD,OAAAC,QAAA,MAAAC,IAAA,EACA,WACA,WACA,OAAeC,EAAQ,KACvB,EACA,4GCCA,IAAMC,EAAQC,CAAAA,EAAAA,EAAAA,EAAAA,EAAmB,CAC7BC,IAAK,EAAE,GAGXC,CAAAA,EAAAA,EAAAA,EAAAA,EACI,IAAMC,EAAAA,CAAAA,CAAAA,GAAgB,CACtB,MAAOC,GAAW,CACTA,IAIL,MAAMA,EAAOC,OAAO,CAACC,MAAM,CAAC,YAAYC,KAAK,CAACC,EAAAA,IAAIA,EAClD,MAAMJ,EAAOC,OAAO,CAACI,GAAG,CAAC,WAAY,GAAY,CAC7CC,CAAAA,EAAAA,EAAAA,CAAAA,EAAY,IAAM,CACdX,EAAME,GAAG,CAACJ,IAAI,CAAE,kBACpB,GACAc,EAAOC,QAAQ,CAACC,MAAM,CAClB,IAAIC,EAAAA,cAAcA,CAAC,CACfC,MAAO,GAAW,CACdL,CAAAA,EAAAA,EAAAA,CAAAA,EAAY,IAAM,CACdX,EAAME,GAAG,CAACJ,IAAI,CACV,kBAAoCmB,MAAA,CAAlBC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,IAErC,EACJ,CACJ,GAER,GACJ,EACA,CAAEC,gBAAiB,EAAK,GAG5B,IAAMC,EAA8B,IAE5B,GAAAC,EAAAC,GAAA,EAACC,MAAAA,UACIxB,EAAME,GAAG,CAACuB,GAAG,CAAC,CAACC,EAAMC,IAClB,GAAAL,EAAAC,GAAA,EAACC,MAAAA,UAAiBE,GAARC,KAM1BC,CAAAA,EAAA,QAAeC,CAAAA,EAAAA,EAAAA,EAAAA,EAASR","sources":["webpack://_N_E/?73e4","webpack://_N_E/./src/pages/reverse.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/reverse\",\n      function () {\n        return require(\"private-next-pages/reverse.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/reverse\"])\n      });\n    }\n  ","import { NOOP, decodeUtf8 } from \"@yume-chan/adb\";\nimport { WritableStream } from \"@yume-chan/stream-extra\";\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { NextPage } from \"next\";\nimport { GLOBAL_STATE } from \"../state\";\n\nconst state = makeAutoObservable({\n    log: [] as string[],\n});\n\nreaction(\n    () => GLOBAL_STATE.adb,\n    async (device) => {\n        if (!device) {\n            return;\n        }\n\n        await device.reverse.remove(\"tcp:3000\").catch(NOOP);\n        await device.reverse.add(\"tcp:3000\", (socket) => {\n            runInAction(() => {\n                state.log.push(`received stream`);\n            });\n            socket.readable.pipeTo(\n                new WritableStream({\n                    write: (chunk) => {\n                        runInAction(() => {\n                            state.log.push(\n                                `received data: ${decodeUtf8(chunk)}`\n                            );\n                        });\n                    },\n                })\n            );\n        });\n    },\n    { fireImmediately: true }\n);\n\nconst ReverseTesterPage: NextPage = () => {\n    return (\n        <div>\n            {state.log.map((line, index) => (\n                <div key={index}>{line}</div>\n            ))}\n        </div>\n    );\n};\n\nexport default observer(ReverseTesterPage);\n"],"names":["window","__NEXT_P","push","__webpack_require__","state","makeAutoObservable","log","reaction","GLOBAL_STATE","device","reverse","remove","catch","NOOP","add","runInAction","socket","readable","pipeTo","WritableStream","write","concat","decodeUtf8","chunk","fireImmediately","ReverseTesterPage","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","map","line","index","__webpack_exports__","observer"],"sourceRoot":""}